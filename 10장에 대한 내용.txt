시큐리티 처리 방법		설명
선언적 시큐리티			코드 작성 없이 web.xml 파일에 보안 구성을 작성하여 사용자의 인증을 수행하는 방식이다.
프로그래밍적 시큐리티		request 내장 객체의 메소드를 통해 사용자의 권한 부여를 처리하는 프로그래밍 방식이다.

===================================================================================================
<security-constraint>를 구성하는 하위 요소
요소					설명
<web-resource-collection>	웹 자원에 대한 접근을 설정한다.
<auth-constrain>		웹 자원에 접근할 수 있는 인증된 사용자를 설정한다.
<user-date-constraint>		데이터 전송 시 데이터 보호를 설정한다.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<web-resource-collection>을 구성하는 하위 요소
요소									설명
<web-resource-name>						웹 자원의 이름을 설정하며 생략할 수 있다.
<url-pattern>							접근 제한을 요청할 URL 목록을 설정한다. 자원에 대한 접근을 제한하지 않는 경우 생략할 수 있다.
<<http-method> 또는 <http-method-omission>	http 메소드를 설정한다. (GET 또는 POST)

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<auth-constrain>를 구성하는 하위 요소
요소			설명
<description>	권한 부여 제약 사항에 대한 설명을 기술한다.
<role-name>	권한이 부여된 사용자의 이름을 대문자와 소문자를 구분하여 설정한다. 이때 반드시 tomcat-users.xml에 등록된 역할과 사용자여야 한다. 
			만약 모든 사용자에게 군한을 부여하려면 *로 표시한다. <role-name> 요소를 생략하면 <role-pattern> 요소에 설정된 접근 제한 URL에 대한 사용자의 요청을 허용하지 않는다.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<transport-guarantee>의 종류
종류			설명
NONE		기본 값으로 데이터를 보호하지 않겠다는 의미이다.
INTEGRAL		전송 중 데이터가 변경되지 않았음을 보장한다는 의미다. (데이터 무결성)
CONFIDENTIAL	전송 중 데이터를 아무도 훔쳐보지 않았음을 보장한다는 의미다. (기밀성)

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<login-config>를 구성하는 하위 요소
요소				설명
<auth-method>		웹 자원에 대한 인증 처리 방식을 설정한다.
<realm-name>		웹 자원에 접근할 수 있는 인증된 사용자를 설정한다.
<form-login-config>	데이터 전송 시 데이터 보호를 설정한다.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<auth-method>의 종류
종류			설명
BASIC		웹 자원을 보호하는 간단하고 일반적인 방법이다.
DIGEST		암호화 메커니즘을 이용하여 전송한다. 많이 사용되지 않는 암호화 기법으로 JSP 컨테이너가 반드시 지원하지 않을 수도 있다.
FORM		일반적인 폼 페이지를 이용하여 로그인 정보를 서버에 전송하는 방식이다. 암호화되지 않은 로그인 정보를 그대로 전송한다.
CLIENT-CERT	클라이언크가 인증서를 자기고 공인 키 인증 방식을 사용하여 로그인하는 방식이다. 클라이언트가 인증서를 가지고 있어야만 로그인이 되므로 비즈니스 환경에서만 사용된다.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
FORM 기반 인증 시 로그인 페이지 요구 사항
속성 이름				속성 값
form 태그의 action 속성	j_security_check
사용자의 name 속성		j_username
비밀번호의 name 속성		j_password

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<form-login-config>를 구성하는 하위 요소
요소				설명
<form-login-page>	인증을 위한 로그인 페이지를 설정한다.
<form-error-page>	인증 실패 시 표시할 오류 페이지를 설정한다.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
보안 관련 request 내장 객체의 메소드
메소드					형식		설명
getRemoteUser()				String	사용자의 인증 상태를 반환한다.
getAuthType()				String	서블릿을 보호하는데 사용되는 인증 방식의 이름을 반환한다.
isUserInRole(java.lang.String role)	boolean	현재 인증된 사용자에게 설정된 역할이 있는지 확인한다. 설정된 경우 true를 반환하고, 그렇지 않은 경우 false를 반환한다.
getProtocol()				String	웹 브라우저의 경우 요청 프로토콜을 가져온다.
isSecure()					boolean	웹 브라우저에서 https 요청으로 request가 들어왔는지 확인한다. 웹브라우저에서 https로 접근하면 true를 반환하고, http로 접근하면 false를 반환한다.
getUserPrinciple()			Principle	현재 인증한 사용자의 이름을 포함하여 java.security.Principle객체를 반환한다.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------